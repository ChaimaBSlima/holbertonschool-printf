.TH _printf 1 "November 2023" "1.0" "_printf Manual"
.SH NAME
_printf \- The functions in the printf() family produce output according to a format as described below.

.SH SYNOPSIS
.B -printf
FORMAT... [\fIARGUMENT\fR]...
.br
.B -printf ...OPTIONS... 

.SH DESCRIPTION
Print ARGUMENT(s) according to FORMAT, or execute according to OPTIONS and returnung the numbers of bytes printed .


.SH OPTIONS
.TP
\fB-c,
.br
print a character and returning one byte.

.TP
\fB-%, 
.br
print a % and returning one byte.

.TP
\fB-s, 
.br
print a string and returning the length of the string as bytes  ( 1 character = 1 bytes ).

.TP
\fB-d,i, 
.br
print an int argument which is converted to signed decimal notation. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits, it is padded on the left with zeros.  The default precision is 1.  When 0 is printed with an explicit precision 0, the output is empty.

.TP
\fB-b, 
.br
convert a decimal number to a binary number and print it , returning the number of bytes od the binary number printed.

.TP
\fB- u, 
.br
print an unsigned int argument which is converted to signed decimal notation. The precision, if any, gives the minimum number of digits that must appear; if the converted value requires fewer digits, it is padded on the left with zeros.  The default precision is 1.  When 0 is printed with an explicit precision 0, the output is empty.

.TP
\fB-o, 
.br
convert a decimal number to the octal base and print the octal number  , returning the number of bytes od the octal number printed.

.TP
\fB-x, 
.br
convert a decimal number to a hexgecimal number and print it using the lowercase alphabet to the digits > 9 (abscdef) , returning the number of bytes od the hexgecimal number printed.

.TP
\fB-X, 
.br
convert a decimal number to a hexgecimal number and print it using the uppercase alphabet to the digits > 9 (ABCDEF) , returning the number of bytes od the hexgecimal number printed.


.SH EXAMPLES
Some examples of how to use _printf:
.PP
\fB_printf() 
.br
Returning error (-1 byte). _printf can not take NULL argument

.PP
\fB_printf("xyz") 
.br
printing : xyz ; Returning: 3 bytes.

.PP
\fB_printf("%") 
.br
Returning error (-1 byte). the special character \% should be followed by a specifer , to print a '\%' see the next example.

.PP
\fB_printf("%\%xyz") 
.br
printing : %xyz ; Returning: 4 bytes.

.PP
\fB_printf("character=%c", character) // character= 'A'
.br
printing : character=A ; Returning: 11 bytes. (bytes of the string before the specifer + bytes of the variable 'character')

\fB_printf("string=%s", string) // string= 'xyz'
.br
printing : string=xyz ; Returning: 10 bytes. (bytes of the string before the specifer + bytes of the variable 'string')

\fB_printf("%d", 1024)
.br
printing : 1024 ; Returning: 4 bytes. ( bytes of the int data printed )

\fB_printf("%i - %i = %i\n", 1024, 2048, -1024)
.br
printing : 1024 - 2048 = -1024 ; Returning: 19 bytes. ( bytes of the int data printed + byte of the characters in the first argument)

\fB_printf("%i", INT_MIN)
.br
printing : -2147483648 ; Returning: 11 bytes. ( bytes of the int data printed)

\fB_printf("%b", 1024)
.br
printing : 10000000000 ; Returning: 11 bytes. ( bytes of the int data printed)

\fB_printf("%u", 1024)
.br
printing : 1024 ; Returning: 4 bytes. ( bytes of the unsigned int data printed )

\fB_printf("%o", 1024)
.br
printing : 2000 ; Returning: 4 bytes. ( bytes of the int data printed)

\fB_printf("%X", 500)
.br
printing : 1F4 ; Returning: 3 bytes. ( bytes of the int data printed)

\fB_printf("%x", 500)
.br
printing : 1f4 ; Returning: 3 bytes. ( bytes of the int data printed)


.SH AUTHOR
Chaima Ben Slima <chaimabslima@outlook.fr>

.SH BUGS
Report bugs to <7689@holbertonstudents.com>

.SH COPYRIGHT
Copyright (C) 2023 Chaima